@page "/Request"
@using SEP3_Client.Data
@using SEP3_Client.Model.Unit.User
@inject NavigationManager NavigationManager
@inject IClientModel ClientModel
<div style="float: left; width: 100%;height: auto;">
    <div style="text-align: center;
         width: 800px;
         height: 800px;
         margin: auto;
         ">
        <button class="oi oi-chevron-left" style="float:left; text-align: left;height: 30px; background-color: #007bff" @onclick="back">
            Back
        </button>
        <h1 style="text-shadow: 2px 2px 5px #818182; color: #4e555b">Friend Request</h1>
        <div style="border: 2px solid black; border-radius: 8px;width: 500px;padding: 10px;height: auto;
        text-align: center;margin: auto">
            <div style="font-size: 30px;text-align: left">
                <img src="user.PNG" width="50px" height="50px"> @accountID
            </div>
            <br/>
            <div style="font-size: 20px;text-align: left">
                Alias: <input type="text" @nickname/>
            </div>
            <br/>
            <div style="font-size: 20px;text-align: left">
                Hide my posts: 
                <select class="form-control selectpicker" style="width: auto;display: inline-block" @bind="root">
                    <option>False</option>
                    <option>True</option></select>
            </div>
            <br/>
            <div style="color: red">
                @error
            </div>
            <br/>
            <div style="font-size: 20px;text-align: right; height: 30px">
                <button class="btn btn-outline-dark" style="float: right; width:auto;height: auto;border-radius: 15px; color: #007bff;" 
                        type="submit" @onclick="clickSend">Send</button>
            </div>
            </div>
    </div>
</div>

@code {
    private string accountID;
    private string nickname;
    private bool root;
    private string error;

    protected override async Task OnInitializedAsync()
    {
        root = false;
        accountID = FriendRequest.friendRequest.requestID;
        error = null;
    }
  
    private void back()
    {
        NavigationManager.NavigateTo("/FriendRequest");
    }

    private void clickSend()
    {
        if (ClientModel.GetAccount().GetId()!=accountID&&ClientModel.GetFriendById(accountID)==null)
        {
            FriendSetting friendSetting = new FriendSetting(accountID,nickname,root);
            ClientModel.AddNewFriend(friendSetting);
            NavigationManager.NavigateTo("/FriendRequest");
        }
        else
        {
            error = "You already have this friend...";
        }
        
    }
}