@page "/"
@using SEP3_Client.Data
@using SEP3_Client.Model
@inject IClientModel ClientModel
@inject NavigationManager NavigationManager

 <div style="float: left;width: 100%;height: auto">
        <button class="btn-primary" style="float: right;position: relative;width:auto;right:15%;height: 40px;border-radius: 5px" @onclick="ChangeState">@otherTitle</button>
    </div>
    <div style="float: left;width: 100%;height: auto">
        <div style="margin: auto">
            <h1 style="text-align: center">@title</h1>
            @if (title.Equals("Login"))
            {
               
                <div style="background: #86cfda;margin: 40px auto;width: 300px;height: 50px">
                            <span class="oi oi-person" style="float: left;width:50px;height: 50px;color: white;
                            font-size: xx-large;line-height:50px;text-align: center"></span>
                            <input type="text" placeholder="account" style="float: left;width:250px;height: 50px" @bind-value="acccount"/>
                 </div>
                <div style="background: #86cfda;margin: 40px auto;width: 300px;height: 50px">
                    <span class="oi oi-lock-locked" style="float: left;width:50px;height: 50px;color: white;font-size: xx-large;
                    line-height:50px;text-align: center"></span>
                    <input type="password" placeholder="password" style="float: left;width:250px;height: 50px" @bind-value="password"/>
                </div>
            }
            @if (title.Equals("Register"))
            {
                @if (username==null)
                {
                    <div style="background: #86cfda;margin: 40px auto;width: 300px;height: 50px">
                        <span class="oi oi-person" style="float: left;width:50px;height: 50px;color: white;
                font-size: xx-large;line-height:50px;text-align: center"></span>
                        <input type="text" placeholder="username" style="float: left;width:250px;height: 50px" @bind-value="username"/>
                    </div>
                }
                else
                {
                    <div style="background: #86cfda;margin: 40px auto;width: 300px;height: 50px">
                        <span class="oi oi-person" style="float: left;width:50px;height: 50px;color: white;
                font-size: xx-large;line-height:50px;text-align: center"></span>
                        <input type="text" placeholder="username" style="float: left;width:250px;height: 50px" @bind-value="username"/>
                    </div>
                }
                
                <div style="background: #86cfda;margin: 40px auto;width: 300px;height: 50px">
                    <span class="oi oi-lock-locked" style="float: left;width:50px;height: 50px;color: white;font-size: xx-large;
                line-height:50px;text-align: center"></span>
                    <input type="password" placeholder="password" style="float: left;width:250px;height: 50px" @bind-value="password"/>
                </div>
                
                @if (password==confirmPassword&&!string.IsNullOrEmpty(confirmPassword))
                {
                    <div style="background: #86cfda;margin: 40px auto;width: 300px;height: 50px">
                        <span class="oi oi-circle-check" style="float: left;width: 50px;height: 50px;color: white;font-size: xx-large;line-height:50px;text-align: center"></span>
                        <input type="password" placeholder="Confirm Password" style="float: left;width:250px;height: 50px" @bind="@confirmPassword"/>
                    </div>
                }
                else
                {
                    <div style="background: red;margin: 40px auto;width: 300px;height: 50px">
                        <span class="oi oi-circle-x" style="float: left;width: 50px;height: 50px;color: white;font-size: xx-large;line-height:50px;text-align: center"></span>
                        <input type="password" placeholder="Confirm Password" style="float: left;width:250px;height: 50px" @bind="@confirmPassword"/>
                    </div>
                }
            }
            <div style="margin: 0px auto;width: 300px;height: auto">
                <p style="color: red">
                    @error
                </p>
            </div>
            @switch (title)
            {
                case "Login":
                    <div style="background: #1b6ec2;margin: 40px auto;width: 300px;height: 50px">
                        <button class="btn btn-primary" style="width: 100%;height: 100%;border-radius: 0px" @onclick="PerformLogin">Login</button>
                    </div>
                    break;
                case "Register":
                    <div style="background: #1b6ec2;margin: 40px auto;width: 300px;height: 50px">
                        <button class="btn btn-primary" style="width: 100%;height: 100%;border-radius: 0px" @onclick="Register">Confirm</button>
                    </div>
                    break;
            }
        </div>
    </div>


@code {
    private string acccount;
    private string password;
    private string confirmPassword;
    private string error;
    private string title;
    private string otherTitle;
    private string username;

    protected override async Task OnInitializedAsync()
    {
        if (MainLayout.IsLogin())
        {
            NavigationManager.NavigateTo("/Profile");
        }
        else
        {
            title = "Login";
                    otherTitle = "Register";
                    confirmPassword = null;
                    error = null;
                    acccount = null;
                    password = null;
                    
        }
        
    }


    private void PerformLogin()
    {
        error = ClientModel.Login(acccount, password);
        if (error == null)
        {
            MainLayout.Login();
            NavigationManager.NavigateTo("/Profile");
        }
    //if (!string.IsNullOrWhiteSpace(acccount)&&!string.IsNullOrEmpty(acccount))
    //{
    //    if (!string.IsNullOrWhiteSpace(password) && !string.IsNullOrEmpty(password))
    //    {
    //        NavigationManager.NavigateTo("/Profile");
    //    }
    //    else
    //    {
    //        error = "Please write a password";
    //    }
    //
    //}
    //else
    //{
    //    error = "Please write the account";
    //}
    }
    
    private void ChangeState()
    {
        if (title.Equals("Login"))
        {
            title = "Register";
            otherTitle = "Login";
        }
        else if (title.Equals("Register"))
        {
            title = "Login";
            otherTitle = "Register";
        }
        acccount = null;
        password = null;
        username = null;
        confirmPassword = null;
        error = null;
    }

    private void Register()
    {
        error = ClientModel.Register(username, password);
        if (error == null)
        {
            MainLayout.Login();
            NavigationManager.NavigateTo("/Profile");
        }
        //if (!string.IsNullOrWhiteSpace(username)&&!string.IsNullOrEmpty(username))
        //{
        //    if (!string.IsNullOrWhiteSpace(password) && !string.IsNullOrEmpty(password))
        //    {
        //        if (confirmPassword == password)
        //        {
        //            NavigationManager.NavigateTo("/Profile");
        //        }
        //        else
        //        {
        //            error = "The confirmed password must be the same as the password";
        //        }
        //    }
        //    else
        //    {
        //        error = "Please write a password";
        //    }
        //}
        //else 
        //{
        //    error = "Please write a username";
        //}
       
    }
    
}