@page "/GroupChat"
@using SEP3_Client.Model.Unit.Group
@using SEP3_Client.Model.List.Message
@using SEP3_Client.Data
@using SEP3_Client.Model.Unit.Message

@using SEP3_Client.Model.Unit.User
@inject NavigationManager NavigationManager
@inject IClientModel ClientModel

<div style="float: left;width: 100%;margin: 30px 0 0 0">
    <div style="text-align: center; width: 10%;height: 50px;float: left">
        <button class="oi oi-chevron-left" style=" float: left; background-color: #03A9F4; color: #FFFFFF; border-radius: 5px; border: hidden; width: auto;height: 30px;line-height: 30px" @onclick="back">
            Back
        </button>
    </div>
    <div style="float: left;width: 80%;">
        <img src="people_multiple_76px_1116527_easyicon.net.png" style="float: left" width="65px" height="65px">
        <h1 style="line-height: 65px">@Group.GroupName</h1>
    </div>
    <div style="float: left; text-align: left;width: 10%">
        <button class="oi oi-cog" style=" float: right; background-color: #03A9F4; color: #FFFFFF; border-radius: 5px; border: hidden; width: auto;height: 30px;line-height: 30px" @onclick="clickCog"></button>
    </div>
</div>

<div style="float: left; width: 100%;height: auto;">
    <div style="text-align: center;width: 80%;height: auto;margin: 0 auto;">
        <div style="width:100%;overflow: auto;height: 500px">
            @if (MessageList == null)
            {
                <p>
                    <em>Loading</em>
                </p>
            }
            else
            {
                if (!MessageList.MessageList.Any())
                {
                    <p>
                        <em>Now you can chat in the group...</em>
                    </p>
                }
                else
                {
                    @foreach (var msg in MessageList.MessageList)
                    {
                        <div style="float: left;width: 95%">
                            @if (msg.SenderId.Equals(Account.Id))
                            {
                                <div style="height: 100%;float: right"><img src="user.PNG" width="40px" height="40px" style="float: right"></div>
                                <div style="width: 70%;float: right">
                                    <div style="height: 100%;float: right;">
                                        <div type="text" style="float: right;width: auto;border-radius:20px;
                            background-color: #ed969e;text-align: left;font-size: 20px;padding: 10px;white-space:normal;
                            word-break:break-all;word-wrap:break-word;">@msg.MessageInfo</div>
                                    </div>
                                    <div style="text-align: left;float: left;width: 100%;height: 10px"></div>
                                </div>
                            }
                            else
                            {
                                <div style="height: 100%;float: left"><img src="user.PNG" width="40px" height="40px" style="float: left"></div>
                                <div style="width: 70%;float: left;">
                                    <div style="text-align: left;color: #b9bbbe;float: left;width: 100%">@msg.SenderId</div>
                                    <div type="text" style="float: left;width: auto;height: auto;border-radius:20px;
                                         background-color: #b9bbbe;text-align: left;font-size: 20px;padding: 10px;white-space:normal;
                                         word-break:break-all;word-wrap:break-word;">@msg.MessageInfo</div>
                                </div>
                                <div style="text-align: left;float: left;width: 100%;height: 10px"></div>
                            }
                        </div>
                    }
                    @foreach (var msg in offlineMessageList.MessageList)
                    {
                        <div style="float: left;width: 95%">
                            <div style="height: 100%;float: right"><img src="user.PNG" width="40px" height="40px" style="float: right"></div>
                                <div style="height: 100%;float: right;">
                                    <div style="width: 70%;float: right"><div type="text" style="float: right;width: auto;max-width: 550px;border-radius:20px;
                                                            background-color: #ed969e;text-align: left;font-size: 20px;padding: 10px;white-space:normal;
                                                            word-break:break-all;word-wrap:break-word;">@msg.MessageInfo</div></div>
                                    <div style="height: 100%;float: right">
                                        <span class="oi oi-warning" style="font-size: x-large;"></span>
                                    </div>
                                </div>
                            <div style="text-align: left;float: left;width: 100%;height: 10px"></div>
                        </div>
                    }
                }
            }
        </div>
        <div>
            <input type="text" style="width:70%; height:40px;font-size: 20px; padding: 10px;border-radius: 10px"  @bind="message"/>
            <button class="btn btn-outline-dark" type="submit" style="background-color: #b8daff;height: 40px" @onclick="() => send()">
                Send
            </button>
        </div>
        <div style="color: red">
            @error
        </div>
    </div>
</div>
@code {
    public static ChatGroup Group;
    private GroupMessageList MessageList;
    private GroupMessageList offlineMessageList;
    private Account Account;
    private string message;
    private string error;
    private static GroupChat groupChat;


    protected override async Task OnInitializedAsync()
    {
        if (!MainLayout.IsLogin())
        {
            NavigationManager.NavigateTo("");
        }
        MessageList = ClientModel.GetMessageByGroupId(Group.GroupId);
        Account = ClientModel.GetAccount();
        offlineMessageList = ClientModel.GetOfflineMessageByGroupId(Group.GroupId);
        groupChat = this;
    }

    private void send()
    {
        if (!string.IsNullOrEmpty(message))
        {
            GroupMessage groupMessage = new GroupMessage(Account.Id,Group.GroupId,message);
            error=ClientModel.SendGroupMessage(groupMessage);
            message = null;
        }
        
    }

    public static GroupChat GetPage()
    {
        if (groupChat==null)
        {
            groupChat = new GroupChat();
        }
        return groupChat;
    }

    private void back()
    {
        NavigationManager.NavigateTo("/Group");
    }

    private void clickCog()
    {
        GroupSetting.ChatGroup = ClientModel.GetGroupByGroupId(Group.GroupId);
        Invitation.GroupId = Group.GroupId;
        NavigationManager.NavigateTo("/GroupSetting");
    }

    public void Update()
    {
        if (ClientModel!=null)
        {
            if (string.IsNullOrEmpty(Group.GroupId))
            {
                NavigationManager.NavigateTo("/Group");
            }
            else
            {
                MessageList = ClientModel.GetMessageByGroupId(Group.GroupId);
                Account = ClientModel.GetAccount();
                offlineMessageList = ClientModel.GetOfflineMessageByGroupId(Group.GroupId);
            }
            InvokeAsync(StateHasChanged);
        }
    }
}