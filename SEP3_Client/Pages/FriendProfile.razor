@page "/FriendProfile"
@using SEP3_Client.Model.Unit.User
@using SEP3_Client.Data
@using SEP3_Client.Model.List.PostList
@using SEP3_Client.Model.Unit.Post
@inject NavigationManager NavigationManager
@inject IClientModel ClientModel
<div style="float: left; width: 100%;height: auto;">
    <div style="text-align: center;
         width: 100%;
         height: 800px;
         margin: auto;
         ">
        <button class="oi oi-chevron-left" style="float:left; text-align: left;height: 30px; background-color: #007bff" @onclick="back">
            Back
        </button>
        <div >
            <button class="oi oi-cog" style="float: right;width: auto;height: auto;display: inline-block;" @onclick="Setting">
            </button>
        </div>
        <h1 style="text-shadow: 2px 2px 5px #818182; color: #4e555b">Profile</h1>
        
        <div style="background: #b9bbbe">
            <span class="oi oi-person" style="float: inherit;width:100%;height: 50px;color: white;
                                           font-size: xx-large;line-height:50px;text-align: center"></span><br/>
            <label style="font-size: 25px">@friendSetting.GetNote()</label>
        </div>
        <div style="height: 8px"></div>
        <div style="float: left; width: 100%;height: auto;">
            <div>
                <button class="oi oi-chat" style="border: 2px solid black;border-radius: 8px; background-color: #8fd19e; width: 100px;
                padding: 10px;height: auto;text-align: center;margin: auto; font-size: 20px;float: right" @onclick="Chat">
                    Chat
                </button>
            </div>
            <div style="border: 2px solid black;
                      border-radius: 8px;width: 500px;padding: 10px;height: auto;text-align: center;margin: auto">
                <div style="font-size: 25px;text-align: left">
                    Basic Information
                </div>
                <div style="font-size: 20px;">
                    <span class="oi oi-sun" style="float: left">Account : @friendSetting.GetId()</span><br/>
                    <div class="oi oi-calendar" style="float: left">Birth of date: @friend.GetBirthday().GetDay() / @friend.GetBirthday().GetMonth() </div><br/>
                    <div class="oi oi-star" style="float: left;">Gender: @friend.GetGender() </div><br/>
                    <div class="oi oi-home" style="float: left">Hometown : @friend.GetHomeTown()</div><br/>
                    <div class="oi oi-phone" style="float: left">TelNo. : @friend.GetPhoneNumber()</div><br/>
                </div>
            </div>
            <div style="height: 8px"></div>
            <div style="border: 2px solid black;
                         border-radius: 8px;width: 500px;padding: 10px;height: auto;text-align: center;margin: auto">
                <div style="font-size: 25px;text-align: left">
                     <div style="float: left;text-align: left">Posts</div><br/>
                    <div style="float: left;text-align: center;">
                     @if (getReverseFriendPostList().Posts == null)
                     {
                         <p>
                             <em>Loading</em>
                         </p>
                     }
                     else
                     {
                         if (!getReverseFriendPostList().Posts.Any())
                         {
                             <p>
                                 <em>The friend never shares posts...</em>
                             </p>
                         }
                         else
                         {
                             @foreach (var post in getReverseFriendPostList().Posts)
                             {
                                 <div style="border: 2px solid black;
                                                             border-radius: 8px;width: 450px;padding: 15px;height: auto;margin: auto;text-align: left;float: left;">
                                     <div style="width: 100%;font-size: 20px"><img src="user.PNG" width="40px" height="40px">@getNote(friend.Id)
                                         </div>
                                         <div style="width: 100%;">
                                             <div type="text" style="width:100%;text-align: left;font-size: 20px;padding: 10px;white-space:normal;
                                       word-break:break-all;word-wrap:break-word;height: auto">@post.Body</div>
                                         </div>
                                         <div style="width: 100%;border-top: 2px solid #b9bbbe;border-bottom: 2px solid #b9bbbe">
                                             <div style=""></div>
                                             <div style="width: 50%;float:left;text-align: center"><button class="oi oi-thumb-up" style="width: 50%;text-align: center;border: none;background-color: white" @onclick="(() => clickLike(post.PostId))">Like @post.LikerIdList.Count</button></div>
                                             <div style="width: 50%;float:right;text-align: center"><button class="oi oi-comment-square" style="width: 50%;text-align: center;border: none;background-color: white">Comment</button></div>
                                         </div>
                                         <div style="width: 100%;">
                                             @foreach (var comment in post.CommentList.Comments)
                                             {
                                                 <tr style="width: 70%;float: left;">
                                                     
                                                     @if (isFriend(comment.SenderId) || comment.SenderId.Equals(Account.Id))
                                                     {
                                                         <div style="height: 100%;float: left"><img src="user.PNG" width="30px" height="30px">
                                                         </div>
                                                         @if (comment.SenderId.Equals(Account.Id))
                                                         {
                                                             <button class="oi oi-x" style="float: right;text-align: right;border: none;font-size: medium;background-color: white" @onclick="(() => deleteComment(post.PostId, comment.CommentId))"></button>
                                                         }
                                                         <div style="width: 70%;float: left">
                                                             <div style="text-align: left;color: #b9bbbe;float: left;width: 100%;font-size: 15px">
                                                                 @if (comment.SenderId.Equals(Account.Id))
                                                                 {
                                                                     @Account.UserName
                                                                 }
                                                                 else
                                                                 {
                                                                     @getNote(comment.SenderId)
                                                                 }
                                                             </div>
                                                             <div type="text" style="float: left;width: auto;height: auto;border-radius:20px;
                                                           background-color: #b9bbbe;text-align: left;font-size: 15px;padding: 5px;white-space:normal;
                                                           word-break:break-all;word-wrap:break-word;">@comment.CommentBody</div>
                                                             <div style="text-align: left;float: left;width: 100%;height: 10px"></div></div>
                                                     }
                                                 </tr>
                                             }
                                             <div style="width: 100%;text-align: left;float: left;font-size: 15px"><img src="user.PNG" width="20px" height="20px">
                                                 <input placeholder="Write a comment..." @bind="commentInfo"/>
                                                 <button class="btn btn-outline-dark" style="font-size: 15px" @onclick="(() => sendComment(post.PostId))">Send</button></div>
                                         </div>
                                         </div>
                             }
                         }
                     }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Friend friend;
    public static FriendSetting friendSetting;
    private PostList postList;
    private Account Account;
    private string commentInfo;
    private static FriendProfile page;

    protected override async Task OnInitializedAsync()
    {
        if (!MainLayout.IsLogin())
        {
            NavigationManager.NavigateTo("");
        }
        friend = ClientModel.GetFriendById(friendSetting.GetId());
        postList =await ClientModel.GetPost();
        Account = ClientModel.GetAccount();
        page = this;
    }

    public static FriendProfile getPage()
    {
        if (page==null)
        {
            page = new FriendProfile();
        }
        return page;
    }
    
    private PostList getReverseFriendPostList()
    {
        PostList reversePostList = new PostList();
        if (postList!=null)
        {
            foreach (var post in postList.Posts)
            {
                if (post.SenderId.Equals(friend.Id))
                {
                    reversePostList.AddPost(post);
                }
            }
            reversePostList.Posts.Reverse();
        }
        return reversePostList;
    }

    private void back()
    {
        NavigationManager.NavigateTo("/FriendList");
    }
    
    private void Setting()
    {
        FriendSettings.FriendSetting = friendSetting;
        NavigationManager.NavigateTo("/FriendSettings");
    }

    private void Chat()
    {
        PrivateChat.FriendSetting = friendSetting;
        NavigationManager.NavigateTo("/PrivateChat");
    }
    
    private string getNote(string id)
    {
        string note=ClientModel.GetFriendSettingList().GetFriendSettingFromAgreeById(id).Note;
        if (!string.IsNullOrEmpty(note))
        {
            return note;
        }
        else
        {
            return ClientModel.GetFriendById(id).UserName;
        }
    }

    private bool isFriend(string id)
    {
        if (ClientModel.GetFriendById(id)!=null)
        {
            return true;
        }
        return false;
    }
    
    private async Task clickLike(string id)
    {
        //foreach (var likeId in postList.GetPostByPostId(id).LikerIdList)
        //{
        //    if (likeId.Equals(Account.Id))
        //    {
        //        postList.GetPostByPostId(id).LikerIdList.Remove(Account.Id);
        //    }
        //    else
        //    {
        //        postList.GetPostByPostId(id).LikerIdList.Add(Account.Id);
        //    }
        //}
        await ClientModel.UpdatePostLike(id);
    }

    private async Task sendComment(string id)
    {
        if (!string.IsNullOrEmpty(id)&&!string.IsNullOrEmpty(commentInfo))
        {
            await ClientModel.AddComment(id,new Comment(Account.Id,commentInfo));
            commentInfo = "";
        }
    }

    private async Task deleteComment(string postId,string commentId)
    {
        if (!string.IsNullOrEmpty(postId)&&!string.IsNullOrEmpty(commentId))
        {
            await ClientModel.RemoveComment(postId, commentId);
        }
    }

    public async Task Update()
    {
        if (ClientModel!=null)
        {
            friend = ClientModel.GetFriendById(friendSetting.GetId());
            postList =await ClientModel.GetPost();
            Account = ClientModel.GetAccount();
        }
    }
    
}