@page "/Chat"
@using SEP3_Client.Model.List.UserList
@using SEP3_Client.Data
@using SEP3_Client.Model.List.Message
@using SEP3_Client.Model.Unit.Message
@using SEP3_Client.Model.Unit.User
@inject NavigationManager NavigationManager
@inject IClientModel ClientModel
<div style="float: left; width: 100%;height: auto;">
    <div style="text-align: left; width: 300px;float:left;height: 100%;overflow: auto" >
        <table class="table">
            <tbody>
            @foreach (var friend in friends.GetFriendSettingList())
            {
                <tr>
                    <td width="300px">
                        <button @onclick="() => chat(friend.Id)" style="background-color: white;width: 250px;text-align: left">
                            <img src="user.PNG" width="40px" height="40px">
                            @if (string.IsNullOrEmpty(getNote(friend.Id)))
                            {
                                @getUserName(friend.Id)<span>@getFriendStatus(friend.Id)</span>
                            }
                            else
                            {
                                @getNote(friend.Id)<span>@getFriendStatus(friend.Id) </span>
                            }
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
    <div style="width: 30px;height: 100%;float: left"></div>
<div style="text-align: center;
         width: 900px;
         height: 600px;
         margin: auto;
         float: left;
         ">
        @if (ID == null)
        {
            <div style="width: 100%;height: 30px"> </div>
            <div style="width: 800px">You can choose a friend to chat</div>
        }
        else{
            <div style="height: 30px;width: 100%;float: left"></div>
            <img src="user.PNG" style="float: left" width="65px" height="65px">
                <h1 style="float: left">
                    @if (!string.IsNullOrEmpty(getNote(ID)))
                    {
                        @getNote(ID)
                    }
                    else
                    {
                        @getUserName(ID)
                    }
                </h1>
                <div style="height: 600px;width:100%;overflow: auto;float: left">
                    @if (MessageList == null)
                    {
                        <p>
                            <em>Loading</em>
                        </p>
                    }
                    else
                    {
                        if (!MessageList.MessageList.Any())
                        {
                            <p>
                                <em>Now you can chat with your friend...</em>
                            </p>
                        }
                        else
                        {
                            <table class="table">
                                <tbody>
                                @foreach (var msg in MessageList.MessageList)
                                {
                                    <tr style="width: 70%">
                                        <td style="width: 70%">
                                            @if (msg.SenderId.Equals(Account.Id))
                                            {
                                                <div style="height: 100%;float: right"><img src="user.PNG" width="40px" height="40px" style="float: right"></div>
                                                <div style="width: 70%;float: right">
                                                    <div type="text" style="float: right;width: auto;border-radius:20px;
                                        background-color: #ed969e;text-align: left;font-size: 20px;padding: 10px;white-space:normal;
                                        word-break:break-all;word-wrap:break-word;">@msg.MessageInfo</div>
                                                </div>
                                            }
                                            else
                                            {
                                                <div style="height: 100%;float: left"><img src="user.PNG" width="40px" height="40px" style="float: left"></div>
                                                <div type="text" style="float: left;width: auto;height: auto;border-radius:20px;
                                                     background-color: #b9bbbe;text-align: left;font-size: 20px;padding: 10px;white-space:normal;
                                                     word-break:break-all;word-wrap:break-word;">@msg.MessageInfo</div>
                                            }
                                        </td>
                                    </tr>

                                }
                                </tbody>
                            </table>
                        }
                    }
                </div>
                <br/>
                <div style="float: left;width: 100%">
                    <input type="text" style="width:400px; font-size: 20px; padding: 10px;border-radius: 10px" @bind="message"/>
                    <button class="btn btn-outline-dark" type="submit" style="background-color: #b8daff;height: 50px" @onclick="() => send()">Send</button>
                </div>
                <div style="color: red;float: left;width: 100%">
                    @error
                </div>
        }
        </div>
</div>

@code {
    private FriendSettingList friends;
    private Account Account;
    private PrivateMessageList MessageList;
    private string ID;
    private string message;
    private string error;
    private static Chat page;

    protected override async Task OnInitializedAsync()
    {
        if (!MainLayout.IsLogin())
        {
            NavigationManager.NavigateTo("");
        }
        Account = ClientModel.GetAccount();
        friends = ClientModel.GetFriendSettingList().GetFriendSettingListByStatus(FriendSettingStatus.AGREE);
        ID = null;
        page = this;
    }

    public static Chat GetPage()
    {
        if (page == null)
        {
            page = new Chat();
        }
        return page;
    }
    
    private string getFriendStatus(string id)
    {
        return ClientModel.GetFriendById(id).UserStatus.GetStatus();
    }

    private string getUserName(string id)
    {
        return ClientModel.GetFriendById(id).GetUserName();
    }

    private string getNote(string id)
    {
        return ClientModel.GetFriendSettingList().GetFriendSettingFromAgreeById(id).GetNote();
    }

    private void chat(string id)
    {
        ID = id;
        Console.WriteLine("eeeeeeeeeeee"+ID);
        MessageList = ClientModel.GetMessageById(ID);
    }
    
    private void send()
    {
        if (!string.IsNullOrEmpty(message))
        {
            error=ClientModel.SendPrivateMessage(new PrivateMessage(Account.Id, ID, message));
            message = null;
        }
    }

    public void Update()
    {
        Account = ClientModel.GetAccount();
        friends = ClientModel.GetFriendSettingList().GetFriendSettingListByStatus(FriendSettingStatus.AGREE);
        ID = null;
    }
    
}