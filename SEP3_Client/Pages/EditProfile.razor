@page "/EditProfile"
@using SEP3_Client.Data
@using SEP3_Client.Model.Unit.User
@inject NavigationManager NavigationManager
@inject IClientModel ClientModel
<div style="float: left; width: 100%;height: auto;">
<div style="text-align: center;
         width: 300px;
         height: auto;
         margin: auto;
         ">
    <h1 style="text-shadow: 2px 2px 5px #818182; color: #4e555b" >Profile</h1>
    <div style="float: left;text-align: left;font-size: 17px">
        <div style="float: left;margin: 20px auto;width: 300px;height: 30px"> 
            <span class="oi oi-person" style="float: left;width:300px;height: 30px">Username : </span>
            <input type="text" style="float: left;width:300px;height: 30px" @bind="username">
         </div>
        <div  style="float: left;margin: 20px auto; height: auto;width: 300px">
            <span class="oi oi-calendar" style="float: left;width:300px;height: 30px">Birth of date: </span>
            <div style="float: left">
                <label style="visibility: hidden">m</label>
                Month :
                <select class="form-control selectpicker" style="width: auto; display: inline-block" @bind=month>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                    <option>6</option>
                    <option>7</option>
                    <option>8</option>
                    <option>9</option>
                    <option>10</option>
                    <option>11</option>
                    <option>12</option>
                </select>
            </div>
            </div>
            <div style="height: 6px"></div>
        <div>
            <label style="visibility: hidden">m</label>
            Day :
            <select class="form-control selectpicker" style="width: auto;display: inline-block" @bind="day">
                @for (int i = 0; i < GetDays(month); i++)
                {
                    <option>@(i + 1)</option>
                }
            </select>
        </div>
        <div style="float: left;margin: 20px auto;">
            <span class="oi oi-star" style="float: left;width:300px;height: 30px">Gender:
                <select class="form-control selectpicker" style="width: auto;display: inline-block" @bind="gender">
                    <option>M</option>
                    <option>F</option></select></span>
        </div><br/>
        <div style="float: left; margin: 20px auto;width: 300px;height: 30px">
            <span class="oi oi-home" style="float: left;width:300px;height: 30px">Hometown : </span>
            <input type="text" style="float: left;width:300px;height: 30px" @bind="hometown"/>
        </div><br/>
        <div  style="float: left; margin: 20px auto;width: 300px;height: 30px">
            <span class="oi oi-phone" style="float: left;width:300px;height: 30px">TelNo. :</span>
            <input type="number" style="float: left;width:300px;height: 30px" @bind="telNo"/>
        </div><br/>
    </div>
    <div style="float: left;margin: 20px auto;width: 300px; height: 40px">
        <button class="btn btn-light" style="width: 100%; height: 100%;background-color: #9fcdff" @onclick="update">SAVE</button>
    </div>
   
</div>
</div>

@code {
    private string username;
    private int month;
    private int day;
    private bool change;
    private static EditProfile editProfile;
    private char gender;
    private string hometown;
    private long telNo;

    protected override async Task OnInitializedAsync()
    {
        if (!MainLayout.IsLogin())
        {
            NavigationManager.NavigateTo("");
        }
        Account account = ClientModel.GetAccount();
        username = account.GetUserName();
        if (account.Birthday==null)
        {
            month = 0;
            day = 0;
        }
        else
        {
            month = account.Birthday.GetMonth();
            day = account.Birthday.GetDay();
        }
        change = false;
        if (char.IsWhiteSpace(account.Gender))
        {
            gender = 'M';
        }
        else
        {
            gender = account.Gender;
        }
        if (string.IsNullOrEmpty(account.GetHomeTown()))
        {
            hometown = "No hometown to show";
        }
        else
        {
            hometown = account.GetHomeTown();
        }
        if (account.GetPhoneNumber()==0)
        {
            telNo = 0;
        }
        else
        {
            telNo = account.GetPhoneNumber();
        }
        editProfile = this;
    }

    public static EditProfile GetPage()
    {
        if (editProfile==null)
        {
            editProfile = new EditProfile();
        }
        return editProfile;
    }

    private List<int> num = new[]
    {
        31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
    }.ToList();

    private void update()
    {
        Account newAccount = ClientModel.GetAccount().Copy();
        newAccount.Update(username,new Birthday(day,month),gender,hometown,telNo);
        ClientModel.UpdateBasicInformation(newAccount);
        NavigationManager.NavigateTo("/Profile");
    }

    private int GetDays(int month)
    {
        if (month>0)
        {
            return num[month - 1];
        }
        return 0;
    }


}